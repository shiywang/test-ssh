var N=null,E="",T="t",U="u",searchIndex={};
var R=["Client to make outgoing API requests to a quay instance.","option","string","fallible","client","result","to_owned","clone_into","try_from","borrow","borrow_mut","try_into","type_id","clientbuilder","formatter","ClientBuilder","grapherror","commons","backtrace","httpresponse","GraphError","MergeOptions","cincinnati","Wrapper struct for a universal implementation of Plugin…","InternalIO","ExternalIO","PluginError","cincinnati::plugins","version","metadata","unknown_fields","cached_size","PluginExchange","parameters","repeatedfield","graph_node","graph_edge","hashmap","pluginerror_kind","deserialize_config","cincinnati::plugins::internal","key_prefix","Validate plugin configuration and fill in defaults.","internalio","externalio","releaseid","Returns tuples of ReleaseId and its version String for…","typeid","equivalent","into_iter","to_string","cincinnati::plugins::external::web","cincinnati::plugins::interface","cincinnati::plugins::internal::channel_filter","cincinnati::plugins::internal::edge_add_remove","cincinnati::plugins::internal::metadata_fetch_quay","cincinnati::plugins::internal::node_remove","build_plugin","pluginio","run_internal","pluginexchange","pluginerror","pluginresult","concreterelease","abstractrelease","default","release","deserialize","serialize","protobufresult","unknownfields","messagedescriptor","is_initialized","merge_from","codedinputstream","compute_size","write_to_with_cached_sizes","codedoutputstream","get_cached_size","get_unknown_fields","mut_unknown_fields","as_any_mut","into_any","descriptor","descriptor_static","default_instance","as_any","protobufvalueref","as_ref","WouldCycle","ConcreteRelease","AbstractRelease","InternalPluginWrapper","ExternalPluginWrapper","PluginIO","ExternalError","PluginResult","_WebPluginClient","Graph_Node","Graph_Edge","PluginError_Kind","ChannelFilterPlugin","EdgeAddRemovePlugin","QuayMetadataFetchPlugin","NodeRemovePlugin","PluginSettings","InternalPlugin","ExternalPlugin","ReleaseId","NextReleases","PreviousReleases","graph_builder","registry","httprequest","graph_builder::config","graph_builder::graph","graph_builder::registry","graph_builder::release","graph_builder::status","metadatakind","AppSettings","MetadataKind","PROM_REGISTRY","read_credentials","register_metrics","Register relevant metrics to a prometheus registry."];
searchIndex[R[111]]={"doc":E,"i":[[0,"config",R[111],"Configuration lookup, parsing and validation.",N,N],[3,R[120],R[114],"Runtime application settings (validated config).",N,N],[12,"address",E,"Listening address for the main service.",0,N],[12,"credentials_path",E,"Optional auth secrets for the registry scraper.",0,N],[12,"mandatory_client_parameters",E,"Required client parameters for the main service.",0,N],[12,"manifestref_key",E,"Metadata key where to record the manifest-reference.",0,N],[12,"path_prefix",E,"Endpoints namespace for the main service.",0,N],[12,"pause_secs",E,"Pause (in seconds) between registry scrapes.",0,N],[12,"port",E,"Listening port for the main service.",0,N],[12,R[112],E,"Target host for the registry scraper.",0,N],[12,"repository",E,"Target image for the registry scraper.",0,N],[12,"status_address",E,"Listening address for the status service.",0,N],[12,"status_port",E,"Listening port for the status service.",0,N],[12,"verbosity",E,"Global log level.",0,N],[12,"disable_quay_api_metadata",E,"Disable quay-metadata (Satellite compat).",0,N],[11,"assemble",E,"Lookup all optional configs, merge them with defaults, and…",0,[[],[R[3]]]],[0,"graph",R[111],E,N,N],[6,"RwLock",R[115],"A reader-writer lock",N,N],[3,"State",E,E,N,N],[5,R[124],E,R[125],N,[[[R[112]]],[R[3]]]],[5,"index",E,"Serve Cincinnati graph requests.",N,[[[R[113],["state"]]],[R[5],[R[19],R[16]]]]],[5,"run",E,E,N,N],[5,"create_graph",E,E,N,[[["vec",[R[66]]]],[R[5],["graph","error"]]]],[11,"new",E,"Creates a new State with the given arguments",1,[[["arc",["rwlock"]],["hashset",[R[2]]],["arc",["rwlock"]],["arc",["rwlock"]]],["state"]]],[11,"is_live",E,"Returns the boolean inside self.live",1,[[["self"]],["bool"]]],[11,"is_ready",E,"Returns the boolean inside self.ready",1,[[["self"]],["bool"]]],[0,R[112],R[111],E,N,N],[3,"Release",R[116],E,N,N],[12,"source",E,E,2,N],[12,R[29],E,E,2,N],[3,"Registry",E,E,N,N],[5,R[123],E,E,N,[[[R[1],["pathbuf"]],["str"]],[R[5],["error"]]]],[5,"authenticate_client",E,E,N,N],[5,"fetch_releases",E,"Fetches a vector of all release metadata from the given…",N,[[[R[112]],["str"],[R[1],["str"]],[R[1],["str"]],[R[37]],["str"]],[R[5],["vec","error"]]]],[11,"try_from_str",E,E,3,[[["str"]],[R[3]]]],[11,"try_new",E,E,3,[[[R[2]],[R[2]],[R[1],["u16"]]],[R[3]]]],[11,"host_port_string",E,E,3,[[["self"]],[R[2]]]],[0,R[66],R[111],E,N,N],[3,"Metadata",R[117],E,N,N],[12,"kind",E,E,4,N],[12,R[28],E,E,4,N],[12,"previous",E,E,4,N],[12,"next",E,E,4,N],[12,R[29],E,E,4,N],[4,R[121],E,E,N,N],[13,"V0",E,E,5,N],[0,"status",R[111],"Status service.",N,N],[3,R[122],R[118],"Metrics registry.",N,N],[5,"serve_metrics",E,"Expose metrics (Prometheus textual format).",N,[[[R[113],["state"]]],["box",["future"]]]],[5,"serve_liveness",E,"Expose liveness status.",N,[[[R[113],["state"]]],["box",["future"]]]],[5,"serve_readiness",E,"Expose readiness status.",N,[[[R[113],["state"]]],["box",["future"]]]],[11,"from",R[114],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[8],E,E,0,[[[U]],[R[5]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[47]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[5]]]],[11,R[11],E,E,0,[[["self"]],[R[5]]]],[11,"from",R[115],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,N],[11,R[8],E,E,1,[[[U]],[R[5]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[47]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[5]]]],[11,R[11],E,E,1,[[["self"]],[R[5]]]],[11,"from",R[116],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,N],[11,R[8],E,E,2,[[[U]],[R[5]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[47]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[5]]]],[11,R[11],E,E,2,[[["self"]],[R[5]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,N],[11,R[8],E,E,3,[[[U]],[R[5]]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[R[47]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[5]]]],[11,R[11],E,E,3,[[["self"]],[R[5]]]],[11,R[50],R[117],E,4,[[["self"]],[R[2]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[["self"]],[U]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,N],[11,R[8],E,E,4,[[[U]],[R[5]]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[R[47]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[5]]]],[11,R[11],E,E,4,[[["self"]],[R[5]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[["self"]],[U]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,N],[11,R[8],E,E,5,[[[U]],[R[5]]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[12],E,E,5,[[["self"]],[R[47]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[5]]]],[11,R[11],E,E,5,[[["self"]],[R[5]]]],[11,"from",R[118],E,6,[[[T]],[T]]],[11,"into",E,E,6,[[["self"]],[U]]],[11,R[8],E,E,6,[[[U]],[R[5]]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[12],E,E,6,[[["self"]],[R[47]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[5]]]],[11,R[11],E,E,6,[[["self"]],[R[5]]]],[11,"eq",R[116],E,2,[[["self"],[R[66]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[66]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[112]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[112]]],["bool"]]],[11,"eq",R[117],E,4,[[["self"],[R[29]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[29]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[119]]],["bool"]]],[11,R[65],R[114],"Return `AppSettings { address: IpAddr :: V4 ( Ipv4Addr ::…",0,[[],["self"]]],[11,R[65],R[116],E,3,[[],[R[112]]]],[11,"clone",R[115],E,1,[[["self"]],["state"]]],[11,"clone",R[116],E,2,[[["self"]],[R[66]]]],[11,"clone",E,E,3,[[["self"]],[R[112]]]],[11,"clone",R[117],E,4,[[["self"]],[R[29]]]],[11,"clone",E,E,5,[[["self"]],[R[119]]]],[11,"into",R[116],E,2,[[["self"]],[R[66]]]],[11,"fmt",R[117],E,4,[[["self"],[R[14]]],[R[5]]]],[11,"deref",R[118],E,6,[[["self"]],[R[112]]]],[11,"fmt",R[114],E,0,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",R[116],E,2,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",R[117],E,4,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[5]]]],[11,"initialize",R[118],E,6,[[["self"]]]],[11,R[67],R[117],E,4,[[["__d"]],[R[5]]]],[11,R[67],E,E,5,[[["__d"]],[R[5]]]],[11,"merge",R[114],E,0,[[["self"],[R[1],["fileoptions"]]]]],[11,"merge",E,E,0,[[["self"],[R[1],["upstreamoptions"]]]]],[11,"merge",E,E,0,[[["self"],[R[1],["serviceoptions"]]]]],[11,"merge",E,E,0,[[["self"],[R[1],["statusoptions"]]]]],[11,"merge",E,E,0,[[["self"],[R[1],["dockerregistryoptions"]]]]]],"p":[[3,R[120]],[3,"State"],[3,"Release"],[3,"Registry"],[3,"Metadata"],[4,R[121]],[3,R[122]]]};
searchIndex["policy_engine"]={"doc":"Cincinnati backend: policy-engine server.","i":[],"p":[]};
searchIndex["quay"]={"doc":"Asynchronous client for quay.io v1 API.","i":[[5,R[123],"quay",E,N,[[["p"]],[R[3],[R[2]]]]],[0,"v1",E,E,N,N],[3,"Tag","quay::v1","Repository tag.",N,N],[12,"manifest_digest",E,"Manifest digest, in `type:digest` format.",0,N],[12,"name",E,"Tag name.",0,N],[12,"reversion",E,"Whether this tag version is an history revert.",0,N],[3,"Client",E,R[0],N,N],[3,R[15],E,R[0],N,N],[11,"get_labels",E,"Fetch manifestref labels",1,N],[11,"stream_tags",E,"Fetch tags in a repository, in a streaming way.",1,N],[7,"DEFAULT_API_BASE",E,E,N,N],[11,"builder",E,"Return a client builder with default options.",1,[[],[R[13]]]],[11,"http_client",E,"Set (or reset) the HTTP client to use.",2,[[["self"],[R[1],[R[4]]]],["self"]]],[11,"access_token",E,"Set (or reset) the access token to use.",2,[[["self"],[R[1],[R[2]]]],["self"]]],[11,"api_base",E,"Set (or reset) the base API endpoint URL to use.",2,[[["self"],[R[1],[R[2]]]],["self"]]],[11,"build",E,"Build a client with specified parameters.",2,[[["self"]],[R[3],[R[4]]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,N],[11,R[8],E,E,0,[[[U]],[R[5]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[47]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[5]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,N],[11,R[8],E,E,1,[[[U]],[R[5]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[47]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[5]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,N],[11,R[8],E,E,2,[[[U]],[R[5]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[47]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[5]]]],[11,"eq",E,E,0,[[["self"],["tag"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["tag"]],["bool"]]],[11,R[65],E,E,2,[[],["self"]]],[11,"clone",E,E,0,[[["self"]],["tag"]]],[11,"clone",E,E,1,[[["self"]],[R[4]]]],[11,"clone",E,E,2,[[["self"]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[5]]]],[11,R[67],E,E,0,[[["__d"]],[R[5]]]]],"p":[[3,"Tag"],[3,"Client"],[3,R[15]]]};
searchIndex[R[17]]={"doc":"Common utilities for Cincinnati backend.","i":[[4,R[20],R[17],"Error that can be returned by `/v1/graph` endpoint.",N,N],[13,"FailedJsonIn",E,"Failed to deserialize JSON.",0,N],[13,"FailedJsonOut",E,"Failed to serialize JSON.",0,N],[13,"FailedUpstreamFetch",E,"Error response from upstream.",0,N],[13,"FailedPluginExecution",E,"Plugin failure.",0,N],[13,"FailedUpstreamRequest",E,"Error while reaching upstream.",0,N],[13,"InvalidContentType",E,"Requested invalid mediatype.",0,N],[13,"MissingParams",E,"Missing client parameters.",0,N],[5,R[124],E,R[125],N,[[[R[112]]],[R[3]]]],[5,"parse_path_prefix",E,"Strip all but one leading slash and all trailing slashes",N,[[["s"]],[R[2]]]],[5,"parse_params_set",E,"Parse a comma-separated set of client parameters keys.",N,[[["s"]],["hashset",[R[2]]]]],[5,"ensure_query_params",E,"Make sure `query` string contains all `params` keys.",N,[[["hashset"],["str"]],[R[5],[R[16]]]]],[5,"ensure_content_type",E,"Make sure client requested a valid content type.",N,[[["headermap"],["str"]],[R[5],[R[16]]]]],[0,"de",E,"Deserializers.",N,N],[5,"de_loglevel","commons::de","Deserialize a log-level from a numerical value.",N,[[["d"]],[R[5],[R[1]]]]],[11,"as_json_error",R[17],"Return the HTTP JSON error response.",0,[[["self"]],[R[19]]]],[8,R[21],E,"Merge configuration options into runtime settings.",N,N],[10,"merge",E,"MergeOptions values from `options` into current settings.",1,[[["self"],[T]]]],[14,"assign_if_some",E,"Assign to destination if source value is `Some`.",N,N],[11,R[50],E,E,0,[[["self"]],[R[2]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[8],E,E,0,[[[U]],[R[5]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[47]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[5]]]],[11,"as_fail",E,E,0,[[["self"]],["fail"]]],[11,R[48],E,E,0,[[["self"],["k"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[16]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[16]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[5]]]],[11,"name",E,E,0,[[["self"]],[R[1],["str"]]]],[11,"cause",E,E,0,[[["self"]],[R[1],["fail"]]]],[11,R[18],E,E,0,[[["self"]],[R[1],[R[18]]]]],[11,"error_response",E,E,0,[[["self"]],[R[19]]]]],"p":[[4,R[20]],[8,R[21]]]};
searchIndex[R[22]]={"doc":E,"i":[[3,R[89],R[22],"An error returned by the `Dag::add_edge` method in the…",N,N],[12,"0",E,E,0,N],[3,"Graph",E,"Graph type which stores `Release` as node-weights and…",N,N],[3,R[90],E,"Type to represent a Release with all its information.",N,N],[12,R[28],E,E,1,N],[12,"payload",E,E,1,N],[12,R[29],E,E,1,N],[3,R[91],E,"Abtract release only storing a version.",N,N],[12,R[28],E,E,2,N],[3,R[108],E,"Abstraction over a node in the graph representing a…",N,N],[3,R[109],E,"Can be used to iterate over all direct children of the…",N,N],[3,R[110],E,"Can be used to iterate over all direct parents of the…",N,N],[3,"Empty",E,"Dummy type used as edge-weights inside `Graph`.",N,N],[4,"Release",E,"Wrapper enum for the concrete and abstract release types.",N,N],[13,"Concrete",E,E,3,N],[13,"Abstract",E,E,3,N],[0,"plugins",E,"The plugin defines and implements the plugin interface,…",N,N],[3,R[24],R[27],"Struct used by the ExternalPlugin trait impl's",N,N],[12,"graph",E,E,4,N],[12,R[33],E,E,4,N],[3,R[25],E,"Struct used by the InternalPlugin trait impl's",N,N],[12,"bytes",E,E,5,N],[3,R[92],E,R[23],N,N],[12,"0",E,E,6,N],[3,R[93],E,R[23],N,N],[12,"0",E,E,7,N],[4,R[94],E,"Enum for the two IO variants used by InternalPlugin and…",N,N],[13,R[24],E,E,8,N],[13,R[25],E,E,8,N],[4,R[95],E,"Error type which corresponds to interface::PluginError",N,N],[13,R[26],E,E,9,N],[4,R[96],E,"Enum for wrapping the interface plugin output types",N,N],[13,R[32],E,E,10,N],[13,R[26],E,E,10,N],[5,R[39],E,"Validate configuration for a plugin and fill in defaults.",N,[[["value"]],[R[3],["box"]]]],[5,"process",E,"Processes all given Plugins sequentially.",N,N],[0,"macros",E,"Macro definitions to be used by all plugins",N,N],[0,"external",E,"This module references the available external plugins",N,N],[0,"web","cincinnati::plugins::external","The web module can be used to talk to webservice which…",N,N],[3,R[97],R[51],"Struct for implementing the client side of a web plugin",N,N],[12,"url",E,E,11,N],[12,"timeout",E,E,11,N],[12,"ca_cert_path",E,E,11,N],[12,"client_cert_path",E,E,11,N],[0,"interface",R[27],E,N,N],[3,"Graph",R[52],E,N,N],[12,"nodes",E,E,12,N],[12,"edges",E,E,12,N],[12,R[30],E,E,12,N],[12,R[31],E,E,12,N],[3,R[98],E,E,N,N],[12,R[28],E,E,13,N],[12,"payload",E,E,13,N],[12,R[29],E,E,13,N],[12,R[30],E,E,13,N],[12,R[31],E,E,13,N],[3,R[99],E,E,N,N],[12,"from",E,E,14,N],[12,"to",E,E,14,N],[12,R[30],E,E,14,N],[12,R[31],E,E,14,N],[3,R[32],E,E,N,N],[12,"graph",E,E,15,N],[12,R[33],E,E,15,N],[12,R[30],E,E,15,N],[12,R[31],E,E,15,N],[3,R[26],E,E,N,N],[12,"kind",E,E,16,N],[12,"value",E,E,16,N],[12,R[30],E,E,16,N],[12,R[31],E,E,16,N],[4,R[100],E,E,N,N],[13,"GENERIC",E,E,17,N],[13,"INVALID_GRAPH",E,E,17,N],[13,"INVALID_PARAM",E,E,17,N],[13,"FAILED_DEPENDENCY",E,E,17,N],[13,"INTERNAL_FAILURE",E,E,17,N],[5,"file_descriptor_proto",E,E,N,[[],["filedescriptorproto"]]],[11,"new",E,E,12,[[],["graph"]]],[11,"clear_nodes",E,E,12,[[["self"]]]],[11,"set_nodes",E,E,12,[[["self"],[R[34],[R[35]]]]]],[11,"mut_nodes",E,E,12,[[["self"]],[R[34]]]],[11,"take_nodes",E,E,12,[[["self"]],[R[34],[R[35]]]]],[11,"get_nodes",E,E,12,N],[11,"clear_edges",E,E,12,[[["self"]]]],[11,"set_edges",E,E,12,[[["self"],[R[34],[R[36]]]]]],[11,"mut_edges",E,E,12,[[["self"]],[R[34]]]],[11,"take_edges",E,E,12,[[["self"]],[R[34],[R[36]]]]],[11,"get_edges",E,E,12,N],[11,"new",E,E,13,[[],[R[35]]]],[11,"clear_version",E,E,13,[[["self"]]]],[11,"set_version",E,E,13,[[["self"],[R[2]]]]],[11,"mut_version",E,E,13,[[["self"]],[R[2]]]],[11,"take_version",E,E,13,[[["self"]],[R[2]]]],[11,"get_version",E,E,13,[[["self"]],["str"]]],[11,"clear_payload",E,E,13,[[["self"]]]],[11,"set_payload",E,E,13,[[["self"],[R[2]]]]],[11,"mut_payload",E,E,13,[[["self"]],[R[2]]]],[11,"take_payload",E,E,13,[[["self"]],[R[2]]]],[11,"get_payload",E,E,13,[[["self"]],["str"]]],[11,"clear_metadata",E,E,13,[[["self"]]]],[11,"set_metadata",E,E,13,[[["self"],[R[37],[R[2],R[2]]]]]],[11,"mut_metadata",E,E,13,[[["self"]],[R[37]]]],[11,"take_metadata",E,E,13,[[["self"]],[R[37],[R[2],R[2]]]]],[11,"get_metadata",E,E,13,[[["self"]],[R[37]]]],[11,"new",E,E,14,[[],[R[36]]]],[11,"clear_from",E,E,14,[[["self"]]]],[11,"set_from",E,E,14,[[["self"],["u64"]]]],[11,"get_from",E,E,14,[[["self"]],["u64"]]],[11,"clear_to",E,E,14,[[["self"]]]],[11,"set_to",E,E,14,[[["self"],["u64"]]]],[11,"get_to",E,E,14,[[["self"]],["u64"]]],[11,"new",E,E,15,[[],[R[60]]]],[11,"clear_graph",E,E,15,[[["self"]]]],[11,"has_graph",E,E,15,[[["self"]],["bool"]]],[11,"set_graph",E,E,15,[[["self"],["graph"]]]],[11,"mut_graph",E,E,15,[[["self"]],["graph"]]],[11,"take_graph",E,E,15,[[["self"]],["graph"]]],[11,"get_graph",E,E,15,[[["self"]],["graph"]]],[11,"clear_parameters",E,E,15,[[["self"]]]],[11,"set_parameters",E,E,15,[[["self"],[R[37],[R[2],R[2]]]]]],[11,"mut_parameters",E,E,15,[[["self"]],[R[37]]]],[11,"take_parameters",E,E,15,[[["self"]],[R[37],[R[2],R[2]]]]],[11,"get_parameters",E,E,15,[[["self"]],[R[37]]]],[11,"new",E,E,16,[[],[R[61]]]],[11,"clear_kind",E,E,16,[[["self"]]]],[11,"set_kind",E,E,16,[[["self"],[R[38]]]]],[11,"get_kind",E,E,16,[[["self"]],[R[38]]]],[11,"clear_value",E,E,16,[[["self"]]]],[11,"set_value",E,E,16,[[["self"],[R[2]]]]],[11,"mut_value",E,E,16,[[["self"]],[R[2]]]],[11,"take_value",E,E,16,[[["self"]],[R[2]]]],[11,"get_value",E,E,16,[[["self"]],["str"]]],[0,"internal",R[27],"This module implements the internal plugins",N,N],[0,"channel_filter",R[40],"This plugin can be used to filter a graph by a specific…",N,N],[3,R[101],R[53],E,N,N],[12,R[41],E,E,18,N],[12,"key_suffix",E,E,18,N],[11,R[39],E,R[42],18,[[["value"]],[R[3],["box"]]]],[0,"edge_add_remove",R[40],"This plugin adds and removes Edges from Nodes accordingly",N,N],[3,R[102],R[54],E,N,N],[12,R[41],E,E,19,N],[12,"remove_all_edges_value",E,E,19,N],[7,"DEFAULT_REMOVE_ALL_EDGES_VALUE",E,E,N,N],[11,R[39],E,R[42],19,[[["value"]],[R[3],["box"]]]],[0,"metadata_fetch_quay",R[40],"This plugin implements the fetching of dynamic metadata…",N,N],[3,R[103],R[55],"Metadata fetcher for quay.io API.",N,N],[7,"DEFAULT_QUAY_LABEL_FILTER",E,E,N,N],[7,"DEFAULT_QUAY_MANIFESTREF_KEY",E,E,N,N],[7,"DEFAULT_QUAY_REPOSITORY",E,E,N,N],[11,R[39],E,R[42],20,[[["value"]],[R[3],["box"]]]],[11,"try_new",E,E,20,[[[R[2]],[R[2]],[R[2]],[R[1],["pathbuf"]],[R[2]]],[R[3]]]],[0,"node_remove",R[40],"This plugin removes releases according to its metadata",N,N],[3,R[104],R[56],E,N,N],[12,R[41],E,E,21,N],[11,R[39],E,R[42],21,[[["value"]],[R[3],["box"]]]],[8,R[105],R[27],"Settings for a plugin.",N,N],[10,R[57],E,"Build the corresponding plugin for this configuration.",22,[[["self"]],[R[3],["box"]]]],[8,"Plugin",E,"Trait which fronts InternalPlugin and ExternalPlugin,…",N,N],[10,"run",E,E,23,[[["self"],[T]],[R[3]]]],[8,R[106],E,"Trait to be implemented by internal plugins with their…",N,N],[10,R[59],E,E,24,[[["self"],[R[43]]],[R[3],[R[43]]]]],[8,R[107],E,"Trait to be implemented by external plugins with its…",N,N],[10,"run_external",E,E,25,[[["self"],[R[44]]],[R[3],[R[44]]]]],[17,"CONTENT_TYPE",R[22],E,N,N],[11,R[28],E,"Return the version string of a given `Release`.",3,[[["self"]],["str"]]],[11,"add_release",E,"Add a release to the graph.",26,[[["self"],["r"]],[R[5],[R[45],"error"]]]],[11,"add_edge",E,"Add a transition (edge) from `source` to `target`.",26,[[["self"],[R[45]],[R[45]]],[R[5],["error"]]]],[11,"add_edges",E,"Add edges for all given key/value pairs of releases.",26,[[["self"],[R[37],[R[45],R[45]]]],[R[5],["error"]]]],[11,"find_by_version",E,"Returns a Some(ReleaseId) if the version exists in the…",26,[[["self"],["str"]],[R[1],[R[45]]]]],[11,"remove_edge",E,"Removes the directed edge between the given releases.",26,[[["self"],[R[45]],[R[45]]],[R[5],["error"]]]],[11,"remove_edges",E,"Remove the directed edges given by the key/value pairs of…",26,[[["self"],[R[37],[R[45],R[45]]]],[R[5],["error"]]]],[11,"remove_edge_by_index",E,"Remove the edge with the given index.",26,[[["self"],["edgeindex"]],[R[5],["error"]]]],[11,"remove_edges_by_index",E,"Remove the edges with the given indices.",26,N],[11,"find_by_fn_mut",E,R[46],26,[[["self"],["f"]],["vec"]]],[11,"find_by_metadata_pair",E,R[46],26,[[["self"],["str"],["str"]],["vec"]]],[11,"find_by_metadata_key",E,"Returns tuples of ReleaseId, its version String, and the…",26,[[["self"],["str"]],["vec"]]],[11,"get_metadata_as_ref_mut",E,"Returns a mutable reference to the metadata for the given…",26,[[["self"],[R[45]]],[R[5],[R[37],"error"]]]],[11,"next_releases",E,"Returns `NextReleases` for the given release.",26,[[["self"],[R[45]]],["nextreleases"]]],[11,"previous_releases",E,"Returns `PreviousReleases` for the given release.",26,[[["self"],[R[45]]],["previousreleases"]]],[11,"releases_count",E,"Return the number of releases (nodes) in the graph.",26,[[["self"]],["u64"]]],[11,"remove_releases",E,"Removes the nodes with the given ReleaseIds and returns…",26,[[["self"],["vec",[R[45]]]],["usize"]]],[11,"remove_nodes",E,"Removes the nodes with the given NodeIndex and returns the…",26,[[["self"],["vec",["nodeindex"]]],["usize"]]],[11,"prune_abstract",E,"Prune the graph from all abstract releases",26,[[["self"]],["usize"]]],[14,"get_multiple_values",E,E,N,N],[11,R[50],E,E,0,[[["self"]],[R[2]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,N],[11,R[8],E,E,0,[[[U]],[R[5]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[47]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[5]]]],[11,"as_fail",E,E,0,[[["self"]],["fail"]]],[11,R[11],E,E,0,[[["self"]],[R[5]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[["self"]],[U]]],[11,R[8],E,E,26,[[[U]],[R[5]]]],[11,R[9],E,E,26,[[["self"]],[T]]],[11,R[12],E,E,26,[[["self"]],[R[47]]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[5]]]],[11,R[48],E,E,26,[[["self"],["k"]],["bool"]]],[11,R[11],E,E,26,[[["self"]],[R[5]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,N],[11,R[8],E,E,1,[[[U]],[R[5]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[47]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[5]]]],[11,R[11],E,E,1,[[["self"]],[R[5]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,N],[11,R[8],E,E,2,[[[U]],[R[5]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[47]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[5]]]],[11,R[11],E,E,2,[[["self"]],[R[5]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[["self"]],[U]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[7],E,E,27,N],[11,R[8],E,E,27,[[[U]],[R[5]]]],[11,R[9],E,E,27,[[["self"]],[T]]],[11,R[12],E,E,27,[[["self"]],[R[47]]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[5]]]],[11,R[48],E,E,27,[[["self"],["k"]],["bool"]]],[11,R[11],E,E,27,[[["self"]],[R[5]]]],[11,R[49],E,E,28,[[["self"]],["i"]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[["self"]],[U]]],[11,R[8],E,E,28,[[[U]],[R[5]]]],[11,R[9],E,E,28,[[["self"]],[T]]],[11,R[12],E,E,28,[[["self"]],[R[47]]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[5]]]],[11,R[11],E,E,28,[[["self"]],[R[5]]]],[11,R[49],E,E,29,[[["self"]],["i"]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[["self"]],[U]]],[11,R[8],E,E,29,[[[U]],[R[5]]]],[11,R[9],E,E,29,[[["self"]],[T]]],[11,R[12],E,E,29,[[["self"]],[R[47]]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[5]]]],[11,R[11],E,E,29,[[["self"]],[R[5]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[["self"]],[U]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[7],E,E,30,N],[11,R[8],E,E,30,[[[U]],[R[5]]]],[11,R[9],E,E,30,[[["self"]],[T]]],[11,R[12],E,E,30,[[["self"]],[R[47]]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[5]]]],[11,R[11],E,E,30,[[["self"]],[R[5]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,N],[11,R[8],E,E,3,[[[U]],[R[5]]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[R[47]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[5]]]],[11,R[11],E,E,3,[[["self"]],[R[5]]]],[11,"from",R[27],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[["self"]],[U]]],[11,R[8],E,E,4,[[[U]],[R[5]]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[R[47]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[5]]]],[11,R[11],E,E,4,[[["self"]],[R[5]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[["self"]],[U]]],[11,R[8],E,E,5,[[[U]],[R[5]]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[12],E,E,5,[[["self"]],[R[47]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[5]]]],[11,R[11],E,E,5,[[["self"]],[R[5]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[["self"]],[U]]],[11,R[8],E,E,6,[[[U]],[R[5]]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[12],E,E,6,[[["self"]],[R[47]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[5]]]],[11,R[11],E,E,6,[[["self"]],[R[5]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[["self"]],[U]]],[11,R[8],E,E,7,[[[U]],[R[5]]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[12],E,E,7,[[["self"]],[R[47]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[5]]]],[11,R[11],E,E,7,[[["self"]],[R[5]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[["self"]],[U]]],[11,R[8],E,E,8,[[[U]],[R[5]]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[12],E,E,8,[[["self"]],[R[47]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[5]]]],[11,R[11],E,E,8,[[["self"]],[R[5]]]],[11,R[50],E,E,9,[[["self"]],[R[2]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[["self"]],[U]]],[11,R[8],E,E,9,[[[U]],[R[5]]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[12],E,E,9,[[["self"]],[R[47]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[5]]]],[11,"as_fail",E,E,9,[[["self"]],["fail"]]],[11,R[11],E,E,9,[[["self"]],[R[5]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[["self"]],[U]]],[11,R[8],E,E,10,[[[U]],[R[5]]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[12],E,E,10,[[["self"]],[R[47]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[5]]]],[11,R[11],E,E,10,[[["self"]],[R[5]]]],[11,"from",R[51],E,11,[[[T]],[T]]],[11,"into",E,E,11,[[["self"]],[U]]],[11,R[8],E,E,11,[[[U]],[R[5]]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[12],E,E,11,[[["self"]],[R[47]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[5]]]],[11,R[11],E,E,11,[[["self"]],[R[5]]]],[11,"from",R[52],E,12,[[[T]],[T]]],[11,"into",E,E,12,[[["self"]],[U]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[7],E,E,12,N],[11,R[8],E,E,12,[[[U]],[R[5]]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[12],E,E,12,[[["self"]],[R[47]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[5]]]],[11,R[11],E,E,12,[[["self"]],[R[5]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[["self"]],[U]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[7],E,E,13,N],[11,R[8],E,E,13,[[[U]],[R[5]]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[12],E,E,13,[[["self"]],[R[47]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[5]]]],[11,R[11],E,E,13,[[["self"]],[R[5]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[["self"]],[U]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[7],E,E,14,N],[11,R[8],E,E,14,[[[U]],[R[5]]]],[11,R[9],E,E,14,[[["self"]],[T]]],[11,R[12],E,E,14,[[["self"]],[R[47]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[5]]]],[11,R[11],E,E,14,[[["self"]],[R[5]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[["self"]],[U]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[7],E,E,15,N],[11,R[8],E,E,15,[[[U]],[R[5]]]],[11,R[9],E,E,15,[[["self"]],[T]]],[11,R[12],E,E,15,[[["self"]],[R[47]]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[5]]]],[11,R[11],E,E,15,[[["self"]],[R[5]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[["self"]],[U]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[7],E,E,16,N],[11,R[8],E,E,16,[[[U]],[R[5]]]],[11,R[9],E,E,16,[[["self"]],[T]]],[11,R[12],E,E,16,[[["self"]],[R[47]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[5]]]],[11,R[11],E,E,16,[[["self"]],[R[5]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[["self"]],[U]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[7],E,E,17,N],[11,R[8],E,E,17,[[[U]],[R[5]]]],[11,R[9],E,E,17,[[["self"]],[T]]],[11,R[12],E,E,17,[[["self"]],[R[47]]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[5]]]],[11,R[48],E,E,17,[[["self"],["k"]],["bool"]]],[11,R[11],E,E,17,[[["self"]],[R[5]]]],[11,"from",R[53],E,18,[[[T]],[T]]],[11,"into",E,E,18,[[["self"]],[U]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[7],E,E,18,N],[11,R[8],E,E,18,[[[U]],[R[5]]]],[11,R[9],E,E,18,[[["self"]],[T]]],[11,R[12],E,E,18,[[["self"]],[R[47]]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[5]]]],[11,R[11],E,E,18,[[["self"]],[R[5]]]],[11,"from",R[54],E,19,[[[T]],[T]]],[11,"into",E,E,19,[[["self"]],[U]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[7],E,E,19,N],[11,R[8],E,E,19,[[[U]],[R[5]]]],[11,R[9],E,E,19,[[["self"]],[T]]],[11,R[12],E,E,19,[[["self"]],[R[47]]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[5]]]],[11,R[11],E,E,19,[[["self"]],[R[5]]]],[11,"from",R[55],E,20,[[[T]],[T]]],[11,"into",E,E,20,[[["self"]],[U]]],[11,R[8],E,E,20,[[[U]],[R[5]]]],[11,R[9],E,E,20,[[["self"]],[T]]],[11,R[12],E,E,20,[[["self"]],[R[47]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[5]]]],[11,R[11],E,E,20,[[["self"]],[R[5]]]],[11,"from",R[56],E,21,[[[T]],[T]]],[11,"into",E,E,21,[[["self"]],[U]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[7],E,E,21,N],[11,R[8],E,E,21,[[[U]],[R[5]]]],[11,R[9],E,E,21,[[["self"]],[T]]],[11,R[12],E,E,21,[[["self"]],[R[47]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[5]]]],[11,R[11],E,E,21,[[["self"]],[R[5]]]],[11,"fmt",R[22],E,0,[[["self"],[R[14]]],[R[5],["error"]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[5],["error"]]]],[11,"clone",E,E,0,[[["self"]],["wouldcycle"]]],[11,"description",E,E,0,[[["self"]],["str"]]],[11,R[57],R[53],E,18,[[["self"]],[R[3],["box"]]]],[11,R[57],R[54],E,19,[[["self"]],[R[3],["box"]]]],[11,R[57],R[56],E,21,[[["self"]],[R[3],["box"]]]],[11,"run",R[27],E,6,[[["self"],[R[58]]],[R[3],[R[58]]]]],[11,"run",E,E,7,[[["self"],[R[58]]],[R[3],[R[58]]]]],[11,R[59],R[53],E,18,[[["self"],[R[43]]],[R[3],[R[43]]]]],[11,R[59],R[54],E,19,[[["self"],[R[43]]],[R[3],[R[43]]]]],[11,R[59],R[55],E,20,[[["self"],[R[43]]],[R[3],[R[43]]]]],[11,R[59],R[56],E,21,[[["self"],[R[43]]],[R[3],[R[43]]]]],[11,"next",R[22],E,28,[[["self"]],[R[1]]]],[11,"next",E,E,29,[[["self"]],[R[1]]]],[11,"eq",R[52],E,12,[[["self"],["graph"]],["bool"]]],[11,"ne",E,E,12,[[["self"],["graph"]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[35]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[35]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[36]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[36]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[60]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[60]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[61]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[61]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[38]]],["bool"]]],[11,"eq",R[27],E,10,[[["self"],[R[62]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[62]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[43]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[43]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[44]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[44]]],["bool"]]],[11,"eq",R[22],E,3,[[["self"],[R[66]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[66]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[63]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[63]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[64]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[64]]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[45]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[45]]],["bool"]]],[11,"eq",E,E,26,[[["self"],["graph"]],["bool"]]],[11,R[65],R[52],E,12,[[],["graph"]]],[11,R[65],E,E,13,[[],[R[35]]]],[11,R[65],E,E,14,[[],[R[36]]]],[11,R[65],E,E,15,[[],[R[60]]]],[11,R[65],E,E,16,[[],[R[61]]]],[11,R[65],E,E,17,[[],["self"]]],[11,R[65],R[53],"Return `ChannelFilterPlugin { key_prefix:…",18,[[],["self"]]],[11,R[65],R[54],"Return `EdgeAddRemovePlugin { key_prefix:…",19,[[],["self"]]],[11,R[65],R[56],"Return `NodeRemovePlugin { key_prefix: DEFAULT_KEY_FILTER…",21,[[],["self"]]],[11,R[65],R[22],E,26,[[],["graph"]]],[11,"clone",R[52],E,12,[[["self"]],["graph"]]],[11,"clone",E,E,13,[[["self"]],[R[35]]]],[11,"clone",E,E,14,[[["self"]],[R[36]]]],[11,"clone",E,E,15,[[["self"]],[R[60]]]],[11,"clone",E,E,16,[[["self"]],[R[61]]]],[11,"clone",E,E,17,[[["self"]],[R[38]]]],[11,"clone",R[53],E,18,[[["self"]],["channelfilterplugin"]]],[11,"clone",R[54],E,19,[[["self"]],["edgeaddremoveplugin"]]],[11,"clone",R[56],E,21,[[["self"]],["noderemoveplugin"]]],[11,"clone",R[22],E,3,[[["self"]],[R[66]]]],[11,"clone",E,E,1,[[["self"]],[R[63]]]],[11,"clone",E,E,2,[[["self"]],[R[64]]]],[11,"clone",E,E,27,[[["self"]],[R[45]]]],[11,"clone",E,E,30,[[["self"]],["empty"]]],[11,"from",R[27],E,8,[[[R[43]]],["self"]]],[11,"from",E,E,8,[[[R[44]]],["self"]]],[11,"from",R[52],E,15,[[[R[43]]],["self"]]],[11,"from",R[22],E,26,[[["graph"]],["self"]]],[11,"from",R[52],E,12,[[["graph"]],["self"]]],[11,"fmt",R[27],E,9,[[["self"],[R[14]]],[R[5]]]],[11,"hash",R[52],E,17,N],[11,"hash",R[22],E,27,N],[11,"fmt",R[52],E,12,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",E,E,13,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",E,E,14,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",E,E,15,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",E,E,16,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",E,E,17,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",R[53],E,18,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",R[54],E,19,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",R[56],E,21,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",R[27],E,9,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",E,E,10,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",E,E,4,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",R[22],E,26,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",E,E,3,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",E,E,2,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",E,E,27,[[["self"],[R[14]]],[R[5]]]],[11,"fmt",E,E,30,[[["self"],[R[14]]],[R[5]]]],[11,R[67],R[53],E,18,[[["__d"]],[R[5]]]],[11,R[67],R[54],E,19,[[["__d"]],[R[5]]]],[11,R[67],R[56],E,21,[[["__d"]],[R[5]]]],[11,R[67],R[22],E,3,[[["__d"]],[R[5]]]],[11,R[67],E,E,1,[[["__d"]],[R[5]]]],[11,R[67],E,E,2,[[["__d"]],[R[5]]]],[11,R[67],E,E,26,[[["d"]],[R[5]]]],[11,R[68],E,E,3,[[["self"],["__s"]],[R[5]]]],[11,R[68],E,E,1,[[["self"],["__s"]],[R[5]]]],[11,R[68],E,E,2,[[["self"],["__s"]],[R[5]]]],[11,R[68],E,E,26,[[["self"],["s"]],[R[5]]]],[11,"name",R[27],E,9,[[["self"]],[R[1],["str"]]]],[11,"cause",E,E,9,[[["self"]],[R[1],["fail"]]]],[11,R[18],E,E,9,[[["self"]],[R[1],[R[18]]]]],[11,"value",R[52],E,17,[[["self"]],["i32"]]],[11,"from_i32",E,E,17,[[["i32"]],[R[1],[R[38]]]]],[11,"values",E,E,17,N],[11,"enum_descriptor_static",E,E,17,[[],["enumdescriptor"]]],[11,R[72],E,E,12,[[["self"]],["bool"]]],[11,R[73],E,E,12,[[["self"],[R[74]]],[R[69]]]],[11,R[75],E,E,12,[[["self"]],["u32"]]],[11,R[76],E,E,12,[[["self"],[R[77]]],[R[69]]]],[11,R[78],E,E,12,[[["self"]],["u32"]]],[11,R[79],E,E,12,[[["self"]],[R[70]]]],[11,R[80],E,E,12,[[["self"]],[R[70]]]],[11,R[86],E,E,12,[[["self"]],["any"]]],[11,R[81],E,E,12,[[["self"]],["any"]]],[11,R[82],E,E,12,[[["box"]],["box",["any"]]]],[11,R[83],E,E,12,[[["self"]],[R[71]]]],[11,"new",E,E,12,[[],["graph"]]],[11,R[84],E,E,12,[[],[R[71]]]],[11,R[85],E,E,12,[[],["graph"]]],[11,R[72],E,E,13,[[["self"]],["bool"]]],[11,R[73],E,E,13,[[["self"],[R[74]]],[R[69]]]],[11,R[75],E,E,13,[[["self"]],["u32"]]],[11,R[76],E,E,13,[[["self"],[R[77]]],[R[69]]]],[11,R[78],E,E,13,[[["self"]],["u32"]]],[11,R[79],E,E,13,[[["self"]],[R[70]]]],[11,R[80],E,E,13,[[["self"]],[R[70]]]],[11,R[86],E,E,13,[[["self"]],["any"]]],[11,R[81],E,E,13,[[["self"]],["any"]]],[11,R[82],E,E,13,[[["box"]],["box",["any"]]]],[11,R[83],E,E,13,[[["self"]],[R[71]]]],[11,"new",E,E,13,[[],[R[35]]]],[11,R[84],E,E,13,[[],[R[71]]]],[11,R[85],E,E,13,[[],[R[35]]]],[11,R[72],E,E,14,[[["self"]],["bool"]]],[11,R[73],E,E,14,[[["self"],[R[74]]],[R[69]]]],[11,R[75],E,E,14,[[["self"]],["u32"]]],[11,R[76],E,E,14,[[["self"],[R[77]]],[R[69]]]],[11,R[78],E,E,14,[[["self"]],["u32"]]],[11,R[79],E,E,14,[[["self"]],[R[70]]]],[11,R[80],E,E,14,[[["self"]],[R[70]]]],[11,R[86],E,E,14,[[["self"]],["any"]]],[11,R[81],E,E,14,[[["self"]],["any"]]],[11,R[82],E,E,14,[[["box"]],["box",["any"]]]],[11,R[83],E,E,14,[[["self"]],[R[71]]]],[11,"new",E,E,14,[[],[R[36]]]],[11,R[84],E,E,14,[[],[R[71]]]],[11,R[85],E,E,14,[[],[R[36]]]],[11,R[72],E,E,15,[[["self"]],["bool"]]],[11,R[73],E,E,15,[[["self"],[R[74]]],[R[69]]]],[11,R[75],E,E,15,[[["self"]],["u32"]]],[11,R[76],E,E,15,[[["self"],[R[77]]],[R[69]]]],[11,R[78],E,E,15,[[["self"]],["u32"]]],[11,R[79],E,E,15,[[["self"]],[R[70]]]],[11,R[80],E,E,15,[[["self"]],[R[70]]]],[11,R[86],E,E,15,[[["self"]],["any"]]],[11,R[81],E,E,15,[[["self"]],["any"]]],[11,R[82],E,E,15,[[["box"]],["box",["any"]]]],[11,R[83],E,E,15,[[["self"]],[R[71]]]],[11,"new",E,E,15,[[],[R[60]]]],[11,R[84],E,E,15,[[],[R[71]]]],[11,R[85],E,E,15,[[],[R[60]]]],[11,R[72],E,E,16,[[["self"]],["bool"]]],[11,R[73],E,E,16,[[["self"],[R[74]]],[R[69]]]],[11,R[75],E,E,16,[[["self"]],["u32"]]],[11,R[76],E,E,16,[[["self"],[R[77]]],[R[69]]]],[11,R[78],E,E,16,[[["self"]],["u32"]]],[11,R[79],E,E,16,[[["self"]],[R[70]]]],[11,R[80],E,E,16,[[["self"]],[R[70]]]],[11,R[86],E,E,16,[[["self"]],["any"]]],[11,R[81],E,E,16,[[["self"]],["any"]]],[11,R[82],E,E,16,[[["box"]],["box",["any"]]]],[11,R[83],E,E,16,[[["self"]],[R[71]]]],[11,"new",E,E,16,[[],[R[61]]]],[11,R[84],E,E,16,[[],[R[71]]]],[11,R[85],E,E,16,[[],[R[61]]]],[11,"clear",E,E,12,[[["self"]]]],[11,"clear",E,E,13,[[["self"]]]],[11,"clear",E,E,14,[[["self"]]]],[11,"clear",E,E,15,[[["self"]]]],[11,"clear",E,E,16,[[["self"]]]],[11,R[88],E,E,12,[[["self"]],[R[87]]]],[11,R[88],E,E,13,[[["self"]],[R[87]]]],[11,R[88],E,E,14,[[["self"]],[R[87]]]],[11,R[88],E,E,15,[[["self"]],[R[87]]]],[11,R[88],E,E,16,[[["self"]],[R[87]]]],[11,R[88],E,E,17,[[["self"]],[R[87]]]],[11,R[8],R[27],E,8,[[["self"]],[R[3]]]],[11,R[8],E,E,8,[[[R[43]]],[R[3]]]],[11,R[8],E,E,8,[[[R[44]]],[R[3]]]],[11,R[8],R[52],E,15,[[[R[44]]],[R[3]]]],[11,R[8],E,E,16,[[[R[44]]],[R[3]]]],[11,R[8],R[27],E,10,[[[R[3],[R[44]]]],[R[3]]]],[11,R[8],E,E,5,[[[R[60]]],[R[3]]]],[11,R[8],E,E,4,[[[R[44]]],[R[3]]]],[11,R[8],E,E,5,[[[R[43]]],[R[3]]]],[11,R[8],E,E,4,[[[R[58]]],[R[3]]]],[11,R[8],E,E,5,[[[R[58]]],[R[3]]]]],"p":[[3,R[89]],[3,R[90]],[3,R[91]],[4,"Release"],[3,R[24]],[3,R[25]],[3,R[92]],[3,R[93]],[4,R[94]],[4,R[95]],[4,R[96]],[3,R[97]],[3,"Graph"],[3,R[98]],[3,R[99]],[3,R[32]],[3,R[26]],[4,R[100]],[3,R[101]],[3,R[102]],[3,R[103]],[3,R[104]],[8,R[105]],[8,"Plugin"],[8,R[106]],[8,R[107]],[3,"Graph"],[3,R[108]],[3,R[109]],[3,R[110]],[3,"Empty"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);